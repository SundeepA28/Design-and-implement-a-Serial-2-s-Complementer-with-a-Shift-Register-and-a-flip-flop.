$date
	Wed Nov 24 08:20:42 2021
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module tb $end
$var wire 4 ! sig_out3 [3:0] $end
$var wire 4 " sig_out2 [3:0] $end
$var wire 4 # sig_out1 [3:0] $end
$var wire 4 $ sig_out0 [3:0] $end
$var wire 4 % sig_in3 [3:0] $end
$var wire 4 & sig_in2 [3:0] $end
$var wire 4 ' sig_in1 [3:0] $end
$var wire 4 ( sig_in0 [3:0] $end
$var reg 1 ) clk $end
$var reg 1 * set $end
$scope module sci0 $end
$var wire 1 ) clk $end
$var wire 1 * load $end
$var wire 4 + load_sig [3:0] $end
$var wire 1 , t2 $end
$var wire 1 - t1 $end
$var wire 1 . t $end
$var wire 4 / out_sig [3:0] $end
$var wire 1 0 carry $end
$scope module df4 $end
$var wire 1 ) clk $end
$var wire 1 * set $end
$var wire 1 0 out $end
$var wire 1 . in $end
$var wire 1 1 dfr_out $end
$var wire 1 2 dfr_in $end
$scope module dfr_2 $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var wire 1 3 reset_ $end
$var wire 1 1 out $end
$var wire 1 2 in $end
$var wire 1 4 df_in $end
$scope module and2_0 $end
$var wire 1 4 o $end
$var wire 1 3 i1 $end
$var wire 1 2 i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 4 in $end
$var wire 1 1 out $end
$var reg 1 1 df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 * i $end
$var wire 1 3 o $end
$upscope $end
$upscope $end
$scope module invert_0 $end
$var wire 1 2 o $end
$var wire 1 . i $end
$upscope $end
$scope module invert_1 $end
$var wire 1 1 i $end
$var wire 1 0 o $end
$upscope $end
$upscope $end
$scope module h $end
$var wire 1 5 a $end
$var wire 1 0 b $end
$var wire 1 . c $end
$var wire 1 - s $end
$upscope $end
$scope module sr0 $end
$var wire 1 - cin $end
$var wire 1 ) clk $end
$var wire 1 * load $end
$var wire 4 6 load_sig [3:0] $end
$var wire 4 7 out_sig [3:0] $end
$var wire 4 8 tmp [3:0] $end
$var wire 4 9 regw [3:0] $end
$var wire 1 , cout $end
$scope module df0 $end
$var wire 1 ) clk $end
$var wire 1 : in $end
$var wire 1 ; out $end
$var reg 1 ; df_out $end
$upscope $end
$scope module df1 $end
$var wire 1 ) clk $end
$var wire 1 < in $end
$var wire 1 = out $end
$var reg 1 = df_out $end
$upscope $end
$scope module df2 $end
$var wire 1 ) clk $end
$var wire 1 > in $end
$var wire 1 ? out $end
$var reg 1 ? df_out $end
$upscope $end
$scope module df3 $end
$var wire 1 ) clk $end
$var wire 1 @ in $end
$var wire 1 A out $end
$var reg 1 A df_out $end
$upscope $end
$scope module mx0 $end
$var wire 1 B i0 $end
$var wire 1 C i1 $end
$var wire 1 * j $end
$var wire 1 D o $end
$upscope $end
$scope module mx1 $end
$var wire 1 E i0 $end
$var wire 1 F i1 $end
$var wire 1 * j $end
$var wire 1 G o $end
$upscope $end
$scope module mx2 $end
$var wire 1 H i0 $end
$var wire 1 I i1 $end
$var wire 1 * j $end
$var wire 1 J o $end
$upscope $end
$scope module mx3 $end
$var wire 1 - i0 $end
$var wire 1 K i1 $end
$var wire 1 * j $end
$var wire 1 L o $end
$upscope $end
$upscope $end
$upscope $end
$scope module sci1 $end
$var wire 1 ) clk $end
$var wire 1 * load $end
$var wire 4 M load_sig [3:0] $end
$var wire 1 N t2 $end
$var wire 1 O t1 $end
$var wire 1 P t $end
$var wire 4 Q out_sig [3:0] $end
$var wire 1 R carry $end
$scope module df4 $end
$var wire 1 ) clk $end
$var wire 1 * set $end
$var wire 1 R out $end
$var wire 1 P in $end
$var wire 1 S dfr_out $end
$var wire 1 T dfr_in $end
$scope module dfr_2 $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var wire 1 U reset_ $end
$var wire 1 S out $end
$var wire 1 T in $end
$var wire 1 V df_in $end
$scope module and2_0 $end
$var wire 1 V o $end
$var wire 1 U i1 $end
$var wire 1 T i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 V in $end
$var wire 1 S out $end
$var reg 1 S df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 * i $end
$var wire 1 U o $end
$upscope $end
$upscope $end
$scope module invert_0 $end
$var wire 1 T o $end
$var wire 1 P i $end
$upscope $end
$scope module invert_1 $end
$var wire 1 S i $end
$var wire 1 R o $end
$upscope $end
$upscope $end
$scope module h $end
$var wire 1 W a $end
$var wire 1 R b $end
$var wire 1 P c $end
$var wire 1 O s $end
$upscope $end
$scope module sr0 $end
$var wire 1 O cin $end
$var wire 1 ) clk $end
$var wire 1 * load $end
$var wire 4 X load_sig [3:0] $end
$var wire 4 Y out_sig [3:0] $end
$var wire 4 Z tmp [3:0] $end
$var wire 4 [ regw [3:0] $end
$var wire 1 N cout $end
$scope module df0 $end
$var wire 1 ) clk $end
$var wire 1 \ in $end
$var wire 1 ] out $end
$var reg 1 ] df_out $end
$upscope $end
$scope module df1 $end
$var wire 1 ) clk $end
$var wire 1 ^ in $end
$var wire 1 _ out $end
$var reg 1 _ df_out $end
$upscope $end
$scope module df2 $end
$var wire 1 ) clk $end
$var wire 1 ` in $end
$var wire 1 a out $end
$var reg 1 a df_out $end
$upscope $end
$scope module df3 $end
$var wire 1 ) clk $end
$var wire 1 b in $end
$var wire 1 c out $end
$var reg 1 c df_out $end
$upscope $end
$scope module mx0 $end
$var wire 1 d i0 $end
$var wire 1 e i1 $end
$var wire 1 * j $end
$var wire 1 f o $end
$upscope $end
$scope module mx1 $end
$var wire 1 g i0 $end
$var wire 1 h i1 $end
$var wire 1 * j $end
$var wire 1 i o $end
$upscope $end
$scope module mx2 $end
$var wire 1 j i0 $end
$var wire 1 k i1 $end
$var wire 1 * j $end
$var wire 1 l o $end
$upscope $end
$scope module mx3 $end
$var wire 1 O i0 $end
$var wire 1 m i1 $end
$var wire 1 * j $end
$var wire 1 n o $end
$upscope $end
$upscope $end
$upscope $end
$scope module sci2 $end
$var wire 1 ) clk $end
$var wire 1 * load $end
$var wire 4 o load_sig [3:0] $end
$var wire 1 p t2 $end
$var wire 1 q t1 $end
$var wire 1 r t $end
$var wire 4 s out_sig [3:0] $end
$var wire 1 t carry $end
$scope module df4 $end
$var wire 1 ) clk $end
$var wire 1 * set $end
$var wire 1 t out $end
$var wire 1 r in $end
$var wire 1 u dfr_out $end
$var wire 1 v dfr_in $end
$scope module dfr_2 $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var wire 1 w reset_ $end
$var wire 1 u out $end
$var wire 1 v in $end
$var wire 1 x df_in $end
$scope module and2_0 $end
$var wire 1 x o $end
$var wire 1 w i1 $end
$var wire 1 v i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 x in $end
$var wire 1 u out $end
$var reg 1 u df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 * i $end
$var wire 1 w o $end
$upscope $end
$upscope $end
$scope module invert_0 $end
$var wire 1 v o $end
$var wire 1 r i $end
$upscope $end
$scope module invert_1 $end
$var wire 1 u i $end
$var wire 1 t o $end
$upscope $end
$upscope $end
$scope module h $end
$var wire 1 y a $end
$var wire 1 t b $end
$var wire 1 r c $end
$var wire 1 q s $end
$upscope $end
$scope module sr0 $end
$var wire 1 q cin $end
$var wire 1 ) clk $end
$var wire 1 * load $end
$var wire 4 z load_sig [3:0] $end
$var wire 4 { out_sig [3:0] $end
$var wire 4 | tmp [3:0] $end
$var wire 4 } regw [3:0] $end
$var wire 1 p cout $end
$scope module df0 $end
$var wire 1 ) clk $end
$var wire 1 ~ in $end
$var wire 1 !" out $end
$var reg 1 !" df_out $end
$upscope $end
$scope module df1 $end
$var wire 1 ) clk $end
$var wire 1 "" in $end
$var wire 1 #" out $end
$var reg 1 #" df_out $end
$upscope $end
$scope module df2 $end
$var wire 1 ) clk $end
$var wire 1 $" in $end
$var wire 1 %" out $end
$var reg 1 %" df_out $end
$upscope $end
$scope module df3 $end
$var wire 1 ) clk $end
$var wire 1 &" in $end
$var wire 1 '" out $end
$var reg 1 '" df_out $end
$upscope $end
$scope module mx0 $end
$var wire 1 (" i0 $end
$var wire 1 )" i1 $end
$var wire 1 * j $end
$var wire 1 *" o $end
$upscope $end
$scope module mx1 $end
$var wire 1 +" i0 $end
$var wire 1 ," i1 $end
$var wire 1 * j $end
$var wire 1 -" o $end
$upscope $end
$scope module mx2 $end
$var wire 1 ." i0 $end
$var wire 1 /" i1 $end
$var wire 1 * j $end
$var wire 1 0" o $end
$upscope $end
$scope module mx3 $end
$var wire 1 q i0 $end
$var wire 1 1" i1 $end
$var wire 1 * j $end
$var wire 1 2" o $end
$upscope $end
$upscope $end
$upscope $end
$scope module sci3 $end
$var wire 1 ) clk $end
$var wire 1 * load $end
$var wire 4 3" load_sig [3:0] $end
$var wire 1 4" t2 $end
$var wire 1 5" t1 $end
$var wire 1 6" t $end
$var wire 4 7" out_sig [3:0] $end
$var wire 1 8" carry $end
$scope module df4 $end
$var wire 1 ) clk $end
$var wire 1 * set $end
$var wire 1 8" out $end
$var wire 1 6" in $end
$var wire 1 9" dfr_out $end
$var wire 1 :" dfr_in $end
$scope module dfr_2 $end
$var wire 1 ) clk $end
$var wire 1 * reset $end
$var wire 1 ;" reset_ $end
$var wire 1 9" out $end
$var wire 1 :" in $end
$var wire 1 <" df_in $end
$scope module and2_0 $end
$var wire 1 <" o $end
$var wire 1 ;" i1 $end
$var wire 1 :" i0 $end
$upscope $end
$scope module df_0 $end
$var wire 1 ) clk $end
$var wire 1 <" in $end
$var wire 1 9" out $end
$var reg 1 9" df_out $end
$upscope $end
$scope module invert_0 $end
$var wire 1 * i $end
$var wire 1 ;" o $end
$upscope $end
$upscope $end
$scope module invert_0 $end
$var wire 1 :" o $end
$var wire 1 6" i $end
$upscope $end
$scope module invert_1 $end
$var wire 1 9" i $end
$var wire 1 8" o $end
$upscope $end
$upscope $end
$scope module h $end
$var wire 1 =" a $end
$var wire 1 8" b $end
$var wire 1 6" c $end
$var wire 1 5" s $end
$upscope $end
$scope module sr0 $end
$var wire 1 5" cin $end
$var wire 1 ) clk $end
$var wire 1 * load $end
$var wire 4 >" load_sig [3:0] $end
$var wire 4 ?" out_sig [3:0] $end
$var wire 4 @" tmp [3:0] $end
$var wire 4 A" regw [3:0] $end
$var wire 1 4" cout $end
$scope module df0 $end
$var wire 1 ) clk $end
$var wire 1 B" in $end
$var wire 1 C" out $end
$var reg 1 C" df_out $end
$upscope $end
$scope module df1 $end
$var wire 1 ) clk $end
$var wire 1 D" in $end
$var wire 1 E" out $end
$var reg 1 E" df_out $end
$upscope $end
$scope module df2 $end
$var wire 1 ) clk $end
$var wire 1 F" in $end
$var wire 1 G" out $end
$var reg 1 G" df_out $end
$upscope $end
$scope module df3 $end
$var wire 1 ) clk $end
$var wire 1 H" in $end
$var wire 1 I" out $end
$var reg 1 I" df_out $end
$upscope $end
$scope module mx0 $end
$var wire 1 J" i0 $end
$var wire 1 K" i1 $end
$var wire 1 * j $end
$var wire 1 L" o $end
$upscope $end
$scope module mx1 $end
$var wire 1 M" i0 $end
$var wire 1 N" i1 $end
$var wire 1 * j $end
$var wire 1 O" o $end
$upscope $end
$scope module mx2 $end
$var wire 1 P" i0 $end
$var wire 1 Q" i1 $end
$var wire 1 * j $end
$var wire 1 R" o $end
$upscope $end
$scope module mx3 $end
$var wire 1 5" i0 $end
$var wire 1 S" i1 $end
$var wire 1 * j $end
$var wire 1 T" o $end
$upscope $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
0T"
0S"
1R"
1Q"
xP"
1O"
1N"
xM"
0L"
0K"
xJ"
xI"
0H"
xG"
1F"
xE"
1D"
xC"
0B"
bx A"
b110 @"
bx ?"
b110 >"
x="
0<"
0;"
x:"
x9"
x8"
bx 7"
x6"
x5"
x4"
b110 3"
12"
11"
00"
0/"
x."
0-"
0,"
x+"
0*"
0)"
x("
x'"
1&"
x%"
0$"
x#"
0""
x!"
0~
bx }
b1000 |
bx {
b1000 z
xy
0x
0w
xv
xu
xt
bx s
xr
xq
xp
b1000 o
0n
0m
0l
0k
xj
1i
1h
xg
1f
1e
xd
xc
0b
xa
0`
x_
1^
x]
1\
bx [
b11 Z
bx Y
b11 X
xW
0V
0U
xT
xS
xR
bx Q
xP
xO
xN
b11 M
1L
1K
0J
0I
xH
1G
1F
xE
0D
0C
xB
xA
1@
x?
0>
x=
1<
x;
0:
bx 9
b1010 8
bx 7
b1010 6
x5
04
03
x2
x1
x0
bx /
x.
x-
x,
b1010 +
1*
0)
b1010 (
b11 '
b1000 &
b110 %
bx $
bx #
bx "
bx !
$end
#5
0-
02
1.
1O
1T
0P
0q
0v
1r
05"
0:"
16"
15
0,
1B
0E
1H
0W
1N
1d
0g
0j
1y
0p
0("
0+"
1."
1="
04"
1J"
1M"
0P"
0;
1=
0?
b1010 $
b1010 /
b1010 7
b1010 9
1A
10
01
1]
1_
0a
b11 #
b11 Q
b11 Y
b11 [
0c
1R
0S
0!"
0#"
0%"
b1000 "
b1000 s
b1000 {
b1000 }
1'"
1t
0u
0C"
1E"
1G"
b110 !
b110 7"
b110 ?"
b110 A"
0I"
18"
09"
1)
#10
0)
#12
1:
0<
1>
0@
0^
1b
1$"
0&"
1B"
0F"
1D
0G
1J
b101 8
0L
1V
0i
b1001 Z
1n
10"
b100 |
02"
1L"
b11 @"
0R"
13
1U
1w
1;"
0*
#15
1H"
1@
0D"
1T"
1<"
0$"
1""
0b
1`
0\
0>
1<
0:
1L
14
b1001 @"
0O"
15"
1:"
06"
00"
b10 |
1-"
0n
1l
b100 Z
0f
0J
1G
b1010 8
0D
1-
12
0.
0M"
0="
14"
0."
1+"
0O
1j
0d
0H
1E
0B
05
1,
0G"
b11 !
b11 7"
b11 ?"
b11 A"
1C"
0'"
b100 "
b100 s
b100 {
b100 }
1%"
0R
1S
1c
b1001 #
b1001 Q
b1001 Y
b1001 [
0_
0A
1?
0=
b101 $
b101 /
b101 7
b101 9
1;
1)
#20
0)
#25
1b
1:
0<
1>
1@
1n
1^
0`
1~
0""
0B"
1F"
0H"
1D
0G
1J
b1101 8
1L
1O
1i
b1010 Z
0l
1*"
b1 |
0-"
0L"
1R"
b100 @"
0T"
15
0,
1B
0E
1H
1-
1W
0N
1g
0j
1("
0+"
0J"
1P"
05"
0;
1=
0?
b1010 $
b1010 /
b1010 7
b1010 9
1A
00
11
0]
1a
b100 #
b100 Q
b100 Y
b100 [
0c
1#"
b10 "
b10 s
b10 {
b10 }
0%"
0E"
b1001 !
b1001 7"
b1001 ?"
b1001 A"
1I"
08"
19"
1)
#30
0)
#35
1H"
1&"
0@
0F"
1D"
1T"
0~
12"
1x
1`
0^
1\
1<
0:
0L
0R"
b1010 @"
1O"
15"
b1000 |
0*"
1q
1v
0r
1l
0i
b1101 Z
1f
1G
b110 8
0D
0-
0P"
1M"
1="
04"
0("
0y
1p
1j
0g
1d
1E
0B
05
1,
0I"
1G"
b100 !
b100 7"
b100 ?"
b100 A"
0C"
0#"
b1 "
b1 s
b1 {
b1 }
1!"
1c
0a
b1010 #
b1010 Q
b1010 Y
b1010 [
1_
1?
0=
b1101 $
b1101 /
b1101 7
b1101 9
1;
1)
#40
0)
#45
1@
0b
1L
1:
0>
0n
0\
1^
1$"
1&"
1B"
0D"
1F"
1-
1D
b1011 8
0J
0O
0f
b110 Z
1i
10"
b1100 |
12"
1L"
0O"
b1101 @"
1R"
15
0,
1B
0H
0W
1N
0d
1g
1y
0p
1."
1q
1J"
0M"
1P"
0;
1=
b110 $
b110 /
b110 7
b110 9
0A
1]
0_
b1101 #
b1101 Q
b1101 Y
b1101 [
1a
0!"
b1000 "
b1000 s
b1000 {
b1000 }
1'"
0t
1u
1E"
0G"
b1010 !
b1010 7"
b1010 ?"
b1010 A"
1I"
1)
#50
0)
#55
0H"
1b
0@
1D"
0B"
0T"
1""
0`
1\
1n
1>
0<
0L
1O"
b110 @"
0L"
05"
b1110 |
1-"
0l
b1011 Z
1f
1O
1J
b101 8
0G
0-
1M"
0J"
0="
14"
1+"
0j
1d
1W
0N
1H
0E
05
1,
1G"
0E"
b1101 !
b1101 7"
b1101 ?"
b1101 A"
1C"
b1100 "
b1100 s
b1100 {
b1100 }
1%"
0c
1_
b110 #
b110 Q
b110 Y
b110 [
0]
1A
0?
b1011 $
b1011 /
b1011 7
b1011 9
1;
1)
